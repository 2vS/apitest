
set( apitest_BIN_DIR ${apitest_SOURCE_DIR}/bin )
set( apitest_MEDIA_DIR ${apitest_BIN_DIR}/Media )
set( apitest_SHADER_DIR ${apitest_BIN_DIR}/Shader )

set( SDL_INCLUDE_DIR "${apitest_SOURCE_DIR}/thirdparty/SDL2-2.0.1/include" )


if( MSVC )
    set( SDL_LIBRARY_DIR "${CMAKE_BINARY_DIR}/thirdparty/SDL2-2.0.1/\$(Configuration)" )

    set( CMAKE_CXX_FLAGS "/WX /W3 /MP /GR /EHa /arch:SSE2" )
    set( CMAKE_CXX_FLAGS_DEBUG "/ZI /Od" )
    set( CMAKE_CXX_FLAGS_RELEASE "/Zi /O2" )

    set( CMAKE_EXE_LINKER_FLAGS "/DEBUG" )
    set( CMAKE_SHARED_LINKER_FLAGS "/DEBUG" )
    set( CMAKE_MODULE_LINKER_FLAGS "/DEBUG" )
elseif( APPLE )

    set( SDL_LIBRARY_DIR "${CMAKE_BINARY_DIR}/thirdparty/SDL2-2.0.1/" )
    
    set( CMAKE_CXX_FLAGS "-std=c++0x -stdlib=libc++ -g -O0 -DPOSIX=1" )
    # set( CMAKE_CXX_FLAGS_DEBUG "-O0" )
    # set( CMAKE_CXX_FLAGS_RELEASE "-O3" )

    set( CMAKE_EXE_LINKER_FLAGS "-g" )
    set( CMAKE_SHARED_LINKER_FLAGS "-g" )
    set( CMAKE_MODULE_LINKER_FLAGS "-g" )
else()
    set( SDL_LIBRARY_DIR "${CMAKE_BINARY_DIR}/thirdparty/SDL2-2.0.1/" )

    set( CMAKE_CXX_FLAGS "-std=c++11 -g -O0 ${CMAKE_CXX_FLAGS} -DPOSIX=1 -DLINUX=1" )
    # set( CMAKE_CXX_FLAGS_DEBUG "-O0" )
    # set( CMAKE_CXX_FLAGS_RELEASE "-O3" )

    set( CMAKE_EXE_LINKER_FLAGS "-g" )
    set( CMAKE_SHARED_LINKER_FLAGS "-g" )
    set( CMAKE_MODULE_LINKER_FLAGS "-g" )
endif( MSVC )

set( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${apitest_BIN_DIR} )
set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${apitest_BIN_DIR} )
set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${apitest_BIN_DIR} )


# http://stackoverflow.com/questions/148570/using-pre-compiled-headers-with-cmake
macro( add_msvc_precompiled_header _precompiledHeader _precompiledSource _sourcesVar )
  if( MSVC )
    get_filename_component( PrecompiledBasename ${_precompiledHeader} NAME_WE)
    set( PrecompiledBinary "${CMAKE_CFG_INTDIR}/${PrecompiledBasename}.pch" )
    set( Sources ${${_sourcesVar}})

    set_source_files_properties( ${_precompiledSource}
                                 PROPERTIES COMPILE_FLAGS "/Yc\"${_precompiledHeader}\" /Fp\"${PrecompiledBinary}\""
                                            OBJECT_OUTPUTS "${PrecompiledBinary}" )

    set_source_files_properties( ${Sources}
                                 PROPERTIES COMPILE_FLAGS "/Yu\"${_precompiledHeader}\" /FI\"${_precompiledHeader}\" /Fp\"${PrecompiledBinary}\""
                                            OBJECT_DEPENDS "${PrecompiledBinary}" )
    # Add precompiled header to _sourcesVar
    LIST( APPEND ${_sourcesVar} ${_precompiledSource} )
  endif( MSVC )
endmacro( add_msvc_precompiled_header )


include_directories( ${apitest_SOURCE_DIR}/src )
file( GLOB_RECURSE HDRS *.h )
